<?xml version="1.0" encoding="UTF-8"?>
<p:library xmlns:p="http://www.w3.org/ns/xproc"
           xmlns:e="http://www.w3.org/1999/XSL/Spec/ElementSyntax"
           xmlns:pxp="http://exproc.org/proposed/steps"
           xmlns:pxf="http://exproc.org/proposed/steps/file"
           xmlns:ml="http://xmlcalabash.com/ns/extensions/marklogic"
           xmlns:cx="http://xmlcalabash.com/ns/extensions"
           xmlns:cxu="http://xmlcalabash.com/ns/extensions/xmlunit"
           xmlns:pos="http://exproc.org/proposed/steps/os"
           version="1.0">

    <p:declare-step type="p:add-attribute">
      <p:input port="source"/>
      <p:output port="result"/>
      <p:option name="match" required="true" e:type="XSLTMatchPattern"/>
      <p:option name="attribute-name" required="true" e:type="xsd:QName"/>
      <p:option name="attribute-prefix" e:type="xsd:NCName"/>
      <p:option name="attribute-namespace" e:type="xsd:anyURI"/>
      <p:option name="attribute-value" required="true" e:type="xsd:string"/>
   </p:declare-step>

    <p:declare-step type="p:add-xml-base">
      <p:input port="source"/>
      <p:output port="result"/>
      <p:option name="all" select="'false'" e:type="xsd:boolean"/>
      <p:option name="relative" select="'true'" e:type="xsd:boolean"/>
   </p:declare-step>

    <p:declare-step type="p:compare">
      <p:input port="source" primary="true"/>
      <p:input port="alternate"/>
      <p:output port="result" primary="false" e:type="xsd:boolean"/>
      <p:option name="fail-if-not-equal" select="'false'" e:type="xsd:boolean"/>
   </p:declare-step>

    <p:declare-step type="p:count">
      <p:input port="source" sequence="true"/>
      <p:output port="result"/>
      <p:option name="limit" select="0" e:type="xsd:integer"/>
   </p:declare-step>

    <p:declare-step type="p:delete">
      <p:input port="source"/>
      <p:output port="result"/>
      <p:option name="match" required="true" e:type="XSLTMatchPattern"/>
   </p:declare-step>

    <p:declare-step type="p:directory-list">
      <p:output port="result"/>
      <p:option name="path" required="true" e:type="xsd:anyURI"/>
      <p:option name="include-filter" e:type="RegularExpression"/>
      <p:option name="exclude-filter" e:type="RegularExpression"/>
   </p:declare-step>

    <p:declare-step type="p:error">
      <p:input port="source" primary="false"/>
      <p:output port="result" sequence="true"/>
      <p:option name="code" required="true" e:type="xsd:QName"/>
      <p:option name="code-prefix" e:type="xsd:NCName"/>
      <p:option name="code-namespace" e:type="xsd:anyURI"/>
   </p:declare-step>

    <p:declare-step type="p:escape-markup">
      <p:input port="source"/>
      <p:output port="result"/>
      <p:option name="cdata-section-elements" select="''" e:type="ListOfQNames"/>
      <p:option name="doctype-public" e:type="xsd:string"/>
      <p:option name="doctype-system" e:type="xsd:anyURI"/>
      <p:option name="escape-uri-attributes" select="'false'" e:type="xsd:boolean"/>
      <p:option name="include-content-type" select="'true'" e:type="xsd:boolean"/>
      <p:option name="indent" select="'false'" e:type="xsd:boolean"/>
      <p:option name="media-type" e:type="xsd:string"/>
      <p:option name="method" select="'xml'" e:type="xsd:QName"/>
      <p:option name="omit-xml-declaration" select="'true'" e:type="xsd:boolean"/>
      <p:option name="standalone" select="'omit'" e:type="true|false|omit"/>
      <p:option name="undeclare-prefixes" e:type="xsd:boolean"/>
      <p:option name="version" select="'1.0'" e:type="xsd:string"/>
   </p:declare-step>

    <p:declare-step type="p:filter">
      <p:input port="source"/>
      <p:output port="result" sequence="true"/>
      <p:option name="select" required="true" e:type="XPathExpression"/>
   </p:declare-step>

    <p:declare-step type="p:http-request">
      <p:input port="source"/>
      <p:output port="result"/>
      <p:option name="byte-order-mark" e:type="xsd:boolean"/>
      <p:option name="cdata-section-elements" select="''" e:type="ListOfQNames"/>
      <p:option name="doctype-public" e:type="xsd:string"/>
      <p:option name="doctype-system" e:type="xsd:anyURI"/>
      <p:option name="encoding" e:type="xsd:string"/>
      <p:option name="escape-uri-attributes" select="'false'" e:type="xsd:boolean"/>
      <p:option name="include-content-type" select="'true'" e:type="xsd:boolean"/>
      <p:option name="indent" select="'false'" e:type="xsd:boolean"/>
      <p:option name="media-type" e:type="xsd:string"/>
      <p:option name="method" select="'xml'" e:type="xsd:QName"/>
      <p:option name="normalization-form" select="'none'" e:type="NormalizationForm"/>
      <p:option name="omit-xml-declaration" select="'true'" e:type="xsd:boolean"/>
      <p:option name="standalone" select="'omit'" e:type="true|false|omit"/>
      <p:option name="undeclare-prefixes" e:type="xsd:boolean"/>
      <p:option name="version" select="'1.0'" e:type="xsd:string"/>
   </p:declare-step>

    <p:declare-step type="p:identity">
      <p:input port="source" sequence="true"/>
      <p:output port="result" sequence="true"/>
   </p:declare-step>

    <p:declare-step type="p:insert">
      <p:input port="source" primary="true"/>
      <p:input port="insertion" sequence="true"/>
      <p:output port="result"/>
      <p:option name="match" select="'/*'" e:type="XSLTMatchPattern"/>
      <p:option name="position" required="true" e:type="first-child|last-child|before|after"/>
   </p:declare-step>

    <p:declare-step type="p:label-elements">
      <p:input port="source"/>
      <p:output port="result"/>
      <p:option name="attribute" select="'xml:id'" e:type="xsd:QName"/>
      <p:option name="attribute-prefix" e:type="xsd:NCName"/>
      <p:option name="attribute-namespace" e:type="xsd:anyURI"/>
      <p:option name="label" select="'concat(&#34;_&#34;,$p:index)'" e:type="XPathExpression"/>
      <p:option name="match" select="'*'" e:type="XSLTMatchPattern"/>
      <p:option name="replace" select="'true'" e:type="xsd:boolean"/>
   </p:declare-step>

    <p:declare-step type="p:load">
      <p:output port="result"/>
      <p:option name="href" required="true" e:type="xsd:anyURI"/>
      <p:option name="dtd-validate" select="'false'" e:type="xsd:boolean"/>
   </p:declare-step>

    <p:declare-step type="p:make-absolute-uris">
      <p:input port="source"/>
      <p:output port="result"/>
      <p:option name="match" required="true" e:type="XSLTMatchPattern"/>
      <p:option name="base-uri" e:type="xsd:anyURI"/>
   </p:declare-step>

    <p:declare-step type="p:namespace-rename">
      <p:input port="source"/>
      <p:output port="result"/>
      <p:option name="from" e:type="xsd:anyURI"/>
      <p:option name="to" e:type="xsd:anyURI"/>
      <p:option name="apply-to" select="'all'" e:type="all|elements|attributes"/>
   </p:declare-step>

    <p:declare-step type="p:pack">
      <p:input port="source" sequence="true" primary="true"/>
      <p:input port="alternate" sequence="true"/>
      <p:output port="result" sequence="true"/>
      <p:option name="wrapper" required="true" e:type="xsd:QName"/>
      <p:option name="wrapper-prefix" e:type="xsd:NCName"/>
      <p:option name="wrapper-namespace" e:type="xsd:anyURI"/>
   </p:declare-step>

    <p:declare-step type="p:parameters">
      <p:input port="parameters" kind="parameter" primary="false"/>
      <p:output port="result" primary="false"/>
   </p:declare-step>

    <p:declare-step type="p:rename">
      <p:input port="source"/>
      <p:output port="result"/>
      <p:option name="match" required="true" e:type="XSLTMatchPattern"/>
      <p:option name="new-name" required="true" e:type="xsd:QName"/>
      <p:option name="new-prefix" e:type="xsd:NCName"/>
      <p:option name="new-namespace" e:type="xsd:anyURI"/>
   </p:declare-step>

    <p:declare-step type="p:replace">
      <p:input port="source" primary="true"/>
      <p:input port="replacement"/>
      <p:output port="result"/>
      <p:option name="match" required="true" e:type="XSLTMatchPattern"/>
   </p:declare-step>

    <p:declare-step type="p:set-attributes">
      <p:input port="source" primary="true"/>
      <p:input port="attributes"/>
      <p:output port="result"/>
      <p:option name="match" required="true" e:type="XSLTMatchPattern"/>
   </p:declare-step>

    <p:declare-step type="p:sink">
      <p:input port="source" sequence="true"/>
   </p:declare-step>

    <p:declare-step type="p:split-sequence">
      <p:input port="source" sequence="true"/>
      <p:output port="matched" sequence="true" primary="true"/>
      <p:output port="not-matched" sequence="true"/>
      <p:option name="initial-only" select="'false'" e:type="xsd:boolean"/>
      <p:option name="test" required="true" e:type="XPathExpression"/>
   </p:declare-step>

    <p:declare-step type="p:store">
      <p:input port="source"/>
      <p:output port="result" primary="false"/>
      <p:option name="href" required="true" e:type="xsd:anyURI"/>
      <p:option name="byte-order-mark" e:type="xsd:boolean"/>
      <p:option name="cdata-section-elements" select="''" e:type="ListOfQNames"/>
      <p:option name="doctype-public" e:type="xsd:string"/>
      <p:option name="doctype-system" e:type="xsd:anyURI"/>
      <p:option name="encoding" e:type="xsd:string"/>
      <p:option name="escape-uri-attributes" select="'false'" e:type="xsd:boolean"/>
      <p:option name="include-content-type" select="'true'" e:type="xsd:boolean"/>
      <p:option name="indent" select="'false'" e:type="xsd:boolean"/>
      <p:option name="media-type" e:type="xsd:string"/>
      <p:option name="method" select="'xml'" e:type="xsd:QName"/>
      <p:option name="normalization-form" select="'none'" e:type="NormalizationForm"/>
      <p:option name="omit-xml-declaration" select="'true'" e:type="xsd:boolean"/>
      <p:option name="standalone" select="'omit'" e:type="true|false|omit"/>
      <p:option name="undeclare-prefixes" e:type="xsd:boolean"/>
      <p:option name="version" select="'1.0'" e:type="xsd:string"/>
      <p:option name="cx:decode" select="'false'" e:type="xsd:boolean"/>
   </p:declare-step>

    <p:declare-step type="p:string-replace">
      <p:input port="source"/>
      <p:output port="result"/>
      <p:option name="match" required="true" e:type="XSLTMatchPattern"/>
      <p:option name="replace" required="true" e:type="XPathExpression"/>
   </p:declare-step>

    <p:declare-step type="p:unescape-markup">
      <p:input port="source"/>
      <p:output port="result"/>
      <p:option name="namespace" e:type="xsd:anyURI"/>
      <p:option name="content-type" select="'application/xml'" e:type="xsd:string"/>
      <p:option name="encoding" e:type="xsd:string"/>
      <p:option name="charset" e:type="xsd:string"/>
   </p:declare-step>

    <p:declare-step type="p:unwrap">
      <p:input port="source"/>
      <p:output port="result"/>
      <p:option name="match" required="true" e:type="XSLTMatchPattern"/>
   </p:declare-step>

    <p:declare-step type="p:wrap">
      <p:input port="source"/>
      <p:output port="result"/>
      <p:option name="wrapper" required="true" e:type="xsd:QName"/>
      <p:option name="wrapper-prefix" e:type="xsd:NCName"/>
      <p:option name="wrapper-namespace" e:type="xsd:anyURI"/>
      <p:option name="match" required="true" e:type="XSLTMatchPattern"/>
      <p:option name="group-adjacent" e:type="XPathExpression"/>
   </p:declare-step>

    <p:declare-step type="p:wrap-sequence">
      <p:input port="source" sequence="true"/>
      <p:output port="result" sequence="true"/>
      <p:option name="wrapper" required="true" e:type="xsd:QName"/>
      <p:option name="wrapper-prefix" e:type="xsd:NCName"/>
      <p:option name="wrapper-namespace" e:type="xsd:anyURI"/>
      <p:option name="group-adjacent" e:type="XPathExpression"/>
   </p:declare-step>

    <p:declare-step type="p:xinclude">
      <p:input port="source"/>
      <p:output port="result"/>
      <p:option name="fixup-xml-base" select="'false'" e:type="xsd:boolean"/>
      <p:option name="fixup-xml-lang" select="'false'" e:type="xsd:boolean"/>
      <p:option name="cx:trim" select="'false'" e:type="xsd:boolean"/>
   </p:declare-step>

    <p:declare-step type="p:xslt">
      <p:input port="source" sequence="true" primary="true"/>
      <p:input port="stylesheet"/>
      <p:input port="parameters" kind="parameter"/>
      <p:output port="result" primary="true"/>
      <p:output port="secondary" sequence="true"/>
      <p:option name="initial-mode" e:type="xsd:QName"/>
      <p:option name="template-name" e:type="xsd:QName"/>
      <p:option name="output-base-uri" e:type="xsd:anyURI"/>
      <p:option name="version" e:type="xsd:string"/>
   </p:declare-step>

    <p:declare-step type="p:exec">
      <p:input port="source" primary="true" sequence="true"/>
      <p:output port="result" primary="true"/>
      <p:output port="errors"/>
      <p:output port="exit-status"/>
      <p:option name="command" required="true" e:type="xsd:string"/>
      <p:option name="args" select="''" e:type="xsd:string"/>
      <p:option name="cwd" e:type="xsd:string"/>
      <p:option name="source-is-xml" select="'true'" e:type="xsd:boolean"/>
      <p:option name="result-is-xml" select="'true'" e:type="xsd:boolean"/>
      <p:option name="wrap-result-lines" select="'false'" e:type="xsd:boolean"/>
      <p:option name="errors-is-xml" select="'false'" e:type="xsd:boolean"/>
      <p:option name="wrap-error-lines" select="'false'" e:type="xsd:boolean"/>
      <p:option name="path-separator" e:type="xsd:string"/>
      <p:option name="failure-threshold" e:type="xsd:integer"/>
      <p:option name="arg-separator" select="' '" e:type="xsd:string"/>
      <p:option name="cx:show-stderr" select="'true'" e:type="xsd:boolean"/>
      <p:option name="byte-order-mark" e:type="xsd:boolean"/>
      <p:option name="cdata-section-elements" select="''" e:type="ListOfQNames"/>
      <p:option name="doctype-public" e:type="xsd:string"/>
      <p:option name="doctype-system" e:type="xsd:anyURI"/>
      <p:option name="encoding" e:type="xsd:string"/>
      <p:option name="escape-uri-attributes" select="'false'" e:type="xsd:boolean"/>
      <p:option name="include-content-type" select="'true'" e:type="xsd:boolean"/>
      <p:option name="indent" select="'false'" e:type="xsd:boolean"/>
      <p:option name="media-type" e:type="xsd:string"/>
      <p:option name="method" select="'xml'" e:type="xsd:QName"/>
      <p:option name="normalization-form" select="'none'" e:type="NormalizationForm"/>
      <p:option name="omit-xml-declaration" select="'true'" e:type="xsd:boolean"/>
      <p:option name="standalone" select="'omit'" e:type="true|false|omit"/>
      <p:option name="undeclare-prefixes" e:type="xsd:boolean"/>
      <p:option name="version" select="'1.0'" e:type="xsd:string"/>
   </p:declare-step>

    <p:declare-step type="p:hash">
      <p:input port="source" primary="true"/>
      <p:output port="result"/>
      <p:input port="parameters" kind="parameter"/>
      <p:option name="value" required="true" e:type="xsd:string"/>
      <p:option name="algorithm" required="true" e:type="xsd:QName"/>
      <p:option name="match" required="true" e:type="XSLTMatchPattern"/>
      <p:option name="version" e:type="xsd:string"/>
   </p:declare-step>

    <p:declare-step type="p:uuid">
      <p:input port="source" primary="true"/>
      <p:output port="result"/>
      <p:option name="match" required="true" e:type="XSLTMatchPattern"/>
      <p:option name="version" e:type="xsd:integer"/>
   </p:declare-step>

    <p:declare-step type="p:validate-with-relax-ng">
      <p:input port="source" primary="true"/>
      <p:input port="schema"/>
      <p:output port="result"/>
      <p:option name="dtd-attribute-values" select="'false'" e:type="xsd:boolean"/>
      <p:option name="dtd-id-idref-warnings" select="'false'" e:type="xsd:boolean"/>
      <p:option name="assert-valid" select="'true'" e:type="xsd:boolean"/>
   </p:declare-step>

    <p:declare-step type="p:validate-with-schematron">
      <p:input port="parameters" kind="parameter"/>
      <p:input port="source" primary="true"/>
      <p:input port="schema"/>
      <p:output port="result" primary="true"/>
      <p:output port="report" sequence="true"/>
      <p:option name="phase" select="'#ALL'" e:type="xsd:string"/>
      <p:option name="assert-valid" select="'true'" e:type="xsd:boolean"/>
   </p:declare-step>

    <p:declare-step type="p:validate-with-xml-schema">
      <p:input port="source" primary="true"/>
      <p:input port="schema" sequence="true"/>
      <p:output port="result"/>
      <p:option name="use-location-hints" select="'false'" e:type="xsd:boolean"/>
      <p:option name="try-namespaces" select="'false'" e:type="xsd:boolean"/>
      <p:option name="assert-valid" select="'true'" e:type="xsd:boolean"/>
      <p:option name="mode" select="'strict'" e:type="strict|lax"/>
   </p:declare-step>

    <p:declare-step type="p:www-form-urldecode">
      <p:output port="result"/>
      <p:option name="value" required="true" e:type="xsd:string"/>
   </p:declare-step>

    <p:declare-step type="p:www-form-urlencode">
      <p:input port="source" primary="true"/>
      <p:output port="result"/>
      <p:input port="parameters" kind="parameter"/>
      <p:option name="match" required="true" e:type="XSLTMatchPattern"/>
   </p:declare-step>

    <p:declare-step type="p:xquery">
      <p:input port="source" sequence="true" primary="true"/>
      <p:input port="query"/>
      <p:input port="parameters" kind="parameter"/>
      <p:output port="result" sequence="true"/>
   </p:declare-step>

    <p:declare-step type="p:xsl-formatter">
      <p:input port="source"/>
      <p:input port="parameters" kind="parameter"/>
      <p:output port="result" primary="false"/>
      <p:option name="href" required="true" e:type="xsd:anyURI"/>
      <p:option name="content-type" e:type="xsd:string"/>
   </p:declare-step>

    <p:declare-step type="p:in-scope-names">
      <p:output port="result" primary="false" e:type="xsd:boolean"/>
   </p:declare-step>

    <p:declare-step type="p:template">
      <p:input port="template"/>
      <p:input port="source" sequence="true" primary="true"/>
      <p:input port="parameters" kind="parameter"/>
      <p:output port="result"/>
   </p:declare-step>

<p:declare-step type="cx:asciidoctor">
   <p:input port="source"/>
   <p:output port="result"/>
   <p:option name="allow-read-uri" e:type="xsd:boolean"/>
   <p:option name="attribute-missing" e:type="xsd:string"/>
   <p:option name="attribute-undefined" e:type="xsd:string"/>
   <p:option name="backend" e:type="xsd:string"/>
   <p:option name="title" e:type="xsd:string"/>
   <p:option name="doctype" e:type="xsd:string"/>
   <p:option name="imagesdir" e:type="xsd:string"/>
   <p:option name="source-language" e:type="xsd:string"/>
   <p:option name="source-highlighter" e:type="xsd:string"/>
   <p:option name="max-include-depth" e:type="xsd:integer"/>
   <p:option name="sectnumlevels" e:type="xsd:integer"/>
   <p:option name="hardbreaks" e:type="xsd:boolean"/>
   <p:option name="cache-uri" e:type="xsd:boolean"/>
   <p:option name="hide-uri-scheme" e:type="xsd:boolean"/>
   <p:option name="appendix-caption" e:type="xsd:string"/>
   <p:option name="math" e:type="xsd:string"/>
   <p:option name="skip-front-matter" e:type="xsd:boolean"/>
   <p:option name="setanchors" e:type="xsd:boolean"/>
   <p:option name="untitled-label" e:type="xsd:string"/>
   <p:option name="ignore-undefined" e:type="xsd:boolean"/>
   <p:option name="toc-placement" e:type="xsd:string"/>
   <p:option name="toc2-placement" e:type="xsd:string"/>
   <p:option name="showtitle" e:type="xsd:boolean"/>
   <p:option name="toc" e:type="xsd:boolean"/>
   <p:option name="localdate" e:type="xsd:dateTime"/>
   <p:option name="localtime" e:type="xsd:dateTime"/>
   <p:option name="docdate" e:type="xsd:dateTime"/>
   <p:option name="doctime" e:type="xsd:dateTime"/>
   <p:option name="stylesheet" e:type="xsd:string"/>
   <p:option name="stylesdir" e:type="xsd:string"/>
   <p:option name="linkcss" e:type="xsd:boolean"/>
   <p:option name="copycss" e:type="xsd:boolean"/>
   <p:option name="icons" e:type="xsd:string"/>
   <p:option name="iconfont-remote" e:type="xsd:boolean"/>
   <p:option name="iconfont-cdn" e:type="xsd:anyURI"/>
   <p:option name="iconfont-name" e:type="xsd:string"/>
   <p:option name="data-uri" e:type="xsd:boolean"/>
   <p:option name="iconsdir" e:type="xsd:string"/>
   <p:option name="numbered" e:type="xsd:boolean"/>
   <p:option name="linkattrs" e:type="xsd:boolean"/>
   <p:option name="experimental" e:type="xsd:boolean"/>
   <p:option name="nofooter" e:type="xsd:boolean"/>
   <p:option name="compat-mode" e:type="xsd:string"/>
   <p:option name="header-footer" e:type="xsd:boolean" select="'true'"/>
   <p:option name="template-dirs" e:type="xsd:string"/>
   <p:option name="template-engine" e:type="xsd:string"/>
   <p:option name="safe" e:type="xsd:string"/>
   <p:option name="eruby" e:type="xsd:string"/>
   <p:option name="compact" e:type="xsd:boolean"/>
   <p:option name="base-dir" e:type="xsd:string"/>
   <p:option name="template-cache" e:type="xsd:boolean"/>
   <p:option name="parse-header-only" e:type="xsd:boolean"/>
</p:declare-step>

    <p:declare-step type="cx:collection-manager">
      <p:input port="source" sequence="true"/>
      <p:output port="result" sequence="true" primary="false"/>
      <p:option name="href" required="true" e:type="xsd:anyURI"/>
   </p:declare-step>

    <p:declare-step type="cx:delta-xml">
      <p:input port="source"/>
      <p:input port="alternate"/>
      <p:input port="dxp"/>
      <p:output port="result"/>
   </p:declare-step>

   <p:declare-step type="cx:ditaa">
     <p:input port="source" sequence="true"/>
     <p:output port="result" sequence="true"/>
     <p:option name="shadows" select="true()" e:type="xsd:boolean"/>
     <p:option name="antialias" select="true()" e:type="xsd:boolean"/>
     <p:option name="corners" select="'square'" e:type="rounded|square"/>
     <p:option name="separation" select="true()" e:type="xsd:boolean"/>
     <p:option name="scale" e:type="xsd:float"/>
     <p:option name="html" select="false()" e:type="xsd:boolean"/>
   </p:declare-step>

<p:declare-step type="cx:hash-document">
   <p:input port="source"/>
   <p:output port="result"/>
   <p:input port="parameters" kind="parameter"/>

   <p:option name="algorithm" required="true" e:type="xsd:QName"/>
   <p:option name="hash-version" e:type="xsd:string"/>
   <p:option name="byte-order-mark" e:type="xsd:boolean"/>
   <p:option name="cdata-section-elements" select="''" e:type="ListOfQNames"/>
   <p:option name="doctype-public" e:type="xsd:string"/>
   <p:option name="doctype-system" e:type="xsd:anyURI"/>
   <p:option name="encoding" e:type="xsd:string"/>
   <p:option name="escape-uri-attributes" select="'false'" e:type="xsd:boolean"/>
   <p:option name="include-content-type" select="'true'" e:type="xsd:boolean"/>
   <p:option name="indent" select="'false'" e:type="xsd:boolean"/>
   <p:option name="media-type" e:type="xsd:string"/>
   <p:option name="method" select="'xml'" e:type="xsd:QName"/>
   <p:option name="normalization-form" select="'none'" e:type="NormalizationForm"/>
   <p:option name="omit-xml-declaration" select="'true'" e:type="xsd:boolean"/>
   <p:option name="standalone" select="'omit'" e:type="true|false|omit"/>
   <p:option name="undeclare-prefixes" e:type="xsd:boolean"/>
   <p:option name="version" select="'1.0'" e:type="xsd:string"/>
</p:declare-step>

   <p:declare-step type="cx:java-properties">
     <p:output port="result"/>
     <p:option name="href" e:type="xsd:anyURI"/>
   </p:declare-step>

   <p:declare-step type="cx:mathml-to-svg">
     <p:input port="source" sequence="false"/>
     <p:input port="parameters" kind="parameter"/>
     <p:output port="result" sequence="false"/>
   </p:declare-step>

    <p:declare-step type="cx:message">
      <p:input port="source" sequence="true"/>
      <p:output port="result" sequence="true"/>
      <p:option name="log" e:type="error|warn|info|debug|trace"/>
      <p:option name="message" required="true" e:type="xsd:string"/>
   </p:declare-step>

   <p:declare-step type="cx:rdfa">
     <p:input port="source"/>
     <p:output port="result" sequence="true"/>
     <p:option name="max-triples-per-document" select="100" e:type="xsd:long"/>
   </p:declare-step>

<p:declare-step type="cx:rdf-load">
  <p:input port="source" sequence="true"/>
  <p:output port="result" sequence="true"/>
  <p:option name="href" required="true" e:type="xsd:anyURI"/>
  <p:option name="language" e:type="xsd:string"/>
  <p:option name="graph" e:type="xsd:string"/>
  <p:option name="max-triples-per-document" select="100" e:type="xsd:long"/>
</p:declare-step>

<p:declare-step type="cx:rdf-store">
  <p:input port="source" sequence="true"/>
  <p:output port="result" primary="false"/>
  <p:option name="href" e:type="xsd:anyURI"/>
  <p:option name="language" e:type="xsd:string"/>
  <p:option name="graph" e:type="xsd:string"/>
</p:declare-step>

<p:declare-step type="cx:sparql">
  <p:input port="source" sequence="true" primary="true"/>
  <p:input port="query"/>
  <p:output port="result" sequence="true"/>
</p:declare-step>

   <p:declare-step type="cx:wait-for-update">
     <p:output port="result"/>
     <p:option name="href" required="true" e:type="xd:anyURI"/>
     <p:option name="pause-before" e:type="xsd:int"/>
     <p:option name="pause-after" e:type="xsd:int"/>
   </p:declare-step>

   <p:declare-step type="cx:send-mail">
     <p:input port="source" sequence="true"/>
     <p:output port="result"/>
   </p:declare-step>

   <p:declare-step type="cx:plantuml">
     <p:input port="source" sequence="true"/>
     <p:output port="result" sequence="true"/>
     <p:option name="format" select="'png'" e:type="png|svg"/>
     <p:option name="html" select="false()" e:type="xsd:boolean"/>
   </p:declare-step>

    <p:declare-step type="cx:pretty-print">
      <p:input port="source"/>
      <p:output port="result"/>
   </p:declare-step>

   <p:declare-step type="cx:report-errors">
     <p:input port="source" primary="true"/>
     <p:input port="report" sequence="true"/>
     <p:output port="result" sequence="true"/>
     <p:option name="code" e:type="xsd:QName"/>
     <p:option name="code-prefix" e:type="xsd:NCName"/>
     <p:option name="code-namespace" e:type="xsd:anyURI"/>
   </p:declare-step>

   <!--
    <p:declare-step type="cx:nvdl">
      <p:input port="source" primary="true"/>
      <p:input port="nvdl"/>
      <p:input port="schemas" sequence="true"/>
      <p:output port="result"/>
      <p:option name="assert-valid" select="'true'" e:type="xsd:boolean"/>
   </p:declare-step>
   -->

    <p:declare-step type="pxp:nvdl">
      <p:input port="source" primary="true"/>
      <p:input port="nvdl"/>
      <p:input port="schemas" sequence="true"/>
      <p:output port="result"/>
      <p:option name="assert-valid" select="'true'" e:type="xsd:boolean"/>
   </p:declare-step>

   <!--
    <p:declare-step type="cx:unzip">
      <p:output port="result"/>
      <p:option name="href" required="true" e:type="xsd:anyURI"/>
      <p:option name="file" e:type="xsd:anyURI"/>
      <p:option name="content-type" e:type="xsd:string"/>
   </p:declare-step>
   -->

    <p:declare-step type="cx:uri-info">
      <p:output port="result"/>
      <p:option name="href" required="true" e:type="xsd:anyURI"/>
      <p:option name="username" e:type="xsd:string"/>
      <p:option name="password" e:type="xsd:string"/>
      <p:option name="auth-method" e:type="xsd:string"/>
      <p:option name="send-authorization" e:type="xsd:boolean"/>
   </p:declare-step>

    <p:declare-step type="cx:css-formatter">
      <p:input port="source" primary="true"/>
      <p:input port="parameters" kind="parameter"/>
      <p:output port="result" primary="false"/>
      <p:option name="href" required="true" e:type="xsd:anyURI"/>
      <p:option name="css" required="false" e:type="ListOfURIs"/>
      <p:option name="content-type" e:type="xsd:string"/>
   </p:declare-step>

    <p:declare-step type="ml:adhoc-query">
      <p:input port="source"/>
      <p:input port="parameters" kind="parameter"/>
      <p:output port="result" sequence="true"/>
      <p:option name="host" e:type="xsd:string"/>
      <p:option name="port" e:type="xsd:integer"/>
      <p:option name="user" e:type="xsd:string"/>
      <p:option name="password" e:type="xsd:string"/>
      <p:option name="content-base" e:type="xsd:string"/>
      <p:option name="wrapper" e:type="xsd:QName"/>
   </p:declare-step>

    <p:declare-step type="ml:invoke-module">
      <p:input port="parameters" kind="parameter"/>
      <p:output port="result" sequence="true"/>
      <p:option name="module" required="true" e:type="xsd:string"/>
      <p:option name="host" e:type="xsd:string"/>
      <p:option name="port" e:type="xsd:integer"/>
      <p:option name="user" e:type="xsd:string"/>
      <p:option name="password" e:type="xsd:string"/>
      <p:option name="content-base" e:type="xsd:string"/>
      <p:option name="wrapper" e:type="xsd:QName"/>
   </p:declare-step>

    <p:declare-step type="ml:insert-document">
      <p:input port="source"/>
      <p:output port="result" primary="false"/>
      <p:option name="host" e:type="xsd:string"/>
      <p:option name="port" e:type="xsd:integer"/>
      <p:option name="user" e:type="xsd:string"/>
      <p:option name="password" e:type="xsd:string"/>
      <p:option name="content-base" e:type="xsd:string"/>
      <p:option name="uri" required="true" e:type="xsd:anyURI"/>
      <p:option name="buffer-size" e:type="xsd:integer"/>
      <p:option name="collections" e:type="xsd:string"/>
      <p:option name="format" e:type="xml|text|binary"/>
      <p:option name="language" e:type="xsd:string"/>
      <p:option name="locale" e:type="xsd:string"/>
   </p:declare-step>

    <p:declare-step type="cxu:compare">
      <p:input port="source" primary="true"/>
      <p:input port="alternate"/>
      <p:output port="result" primary="false"/>
      <p:option name="compare-unmatched" select="'false'" e:type="xsd:boolean"/>
      <p:option name="ignore-comments" select="'false'" e:type="xsd:boolean"/>
      <p:option name="ignore-diff-between-text-and-cdata" select="'false'" e:type="xsd:boolean"/>
      <p:option name="ignore-whitespace" select="'false'" e:type="xsd:boolean"/>
      <p:option name="normalize" select="'false'" e:type="xsd:boolean"/>
      <p:option name="normalize-whitespace" select="'false'" e:type="xsd:boolean"/>
      <p:option name="fail-if-not-equal" select="'false'" e:type="xsd:boolean"/>
   </p:declare-step>

    <p:declare-step type="pxf:copy">
      <p:output port="result" primary="false"/>
      <p:option name="href" required="true" e:type="xsd:anyURI"/>
      <p:option name="target" required="true" e:type="xsd:boolean"/>
      <p:option name="fail-on-error" select="'true'" e:type="xsd:boolean"/>
   </p:declare-step>

    <p:declare-step type="pxf:delete">
      <p:output port="result" primary="false"/>
      <p:option name="href" required="true" e:type="xsd:anyURI"/>
      <p:option name="recursive" select="'false'" e:type="xsd:boolean"/>
      <p:option name="fail-on-error" select="'true'" e:type="xsd:boolean"/>
   </p:declare-step>

    <p:declare-step type="pxf:head">
      <p:output port="result"/>
      <p:option name="href" required="true" e:type="xsd:anyURI"/>
      <p:option name="count" required="true" e:type="xsd:int"/>
      <p:option name="fail-on-error" select="'true'" e:type="xsd:boolean"/>
   </p:declare-step>

    <p:declare-step type="pxf:info">
      <p:output port="result" sequence="true"/>
      <p:option name="href" required="true" e:type="xsd:anyURI"/>
      <p:option name="fail-on-error" select="'true'" e:type="xsd:boolean"/>
   </p:declare-step>

    <p:declare-step type="pxf:mkdir">
      <p:output port="result" primary="false"/>
      <p:option name="href" required="true" e:type="xsd:anyURI"/>
      <p:option name="fail-on-error" select="'true'" e:type="xsd:boolean"/>
   </p:declare-step>

    <p:declare-step type="pxf:move">
      <p:output port="result" primary="false"/>
      <p:option name="href" required="true" e:type="xsd:anyURI"/>
      <p:option name="target" required="true" e:type="xsd:boolean"/>
      <p:option name="fail-on-error" select="'true'" e:type="xsd:boolean"/>
   </p:declare-step>

    <p:declare-step type="pxf:tail">
      <p:output port="result"/>
      <p:option name="href" required="true" e:type="xsd:anyURI"/>
      <p:option name="count" required="true" e:type="xsd:int"/>
      <p:option name="fail-on-error" select="'true'" e:type="xsd:boolean"/>
   </p:declare-step>

    <p:declare-step type="pxf:tempfile">
      <p:output port="result" primary="false"/>
      <p:option name="href" required="true" e:type="xsd:anyURI"/>
      <p:option name="prefix" e:type="xsd:string"/>
      <p:option name="suffix" e:type="xsd:string"/>
      <p:option name="delete-on-exit" e:type="xsd:boolean"/>
      <p:option name="fail-on-error" select="'true'" e:type="xsd:boolean"/>
   </p:declare-step>

    <p:declare-step type="pxf:touch">
      <p:output port="result" primary="false"/>
      <p:option name="href" required="true" e:type="xsd:anyURI"/>
      <p:option name="timestamp" e:type="xsd:dateTime"/>
      <p:option name="fail-on-error" select="'true'" e:type="xsd:boolean"/>
   </p:declare-step>

    <p:declare-step type="pos:info">
      <p:output port="result"/>
   </p:declare-step>

    <p:declare-step type="pos:cwd">
      <p:output port="result" sequence="true"/>
   </p:declare-step>

    <p:declare-step type="pos:env">
      <p:output port="result"/>
   </p:declare-step>

    <p:declare-step type="pxp:unzip">
      <p:output port="result"/>
      <p:option name="href" required="true" e:type="xsd:anyURI"/>
      <p:option name="file" e:type="xsd:string"/>
      <p:option name="content-type" e:type="xsd:string"/>
      <p:option name="charset" e:type="xsd:string"/>
   </p:declare-step>

    <p:declare-step type="pxp:zip">
      <p:input port="source" sequence="true" primary="true"/>
      <p:input port="manifest"/>
      <p:output port="result"/>
      <p:option name="href" required="true" e:type="xsd:anyURI"/>
      <p:option name="compression-method" e:type="stored|deflated"/>
      <p:option name="compression-level" e:type="smallest|fastest|default|huffman|none"/>
      <p:option name="command" select="'update'" e:type="update|freshen|create|delete"/>
   </p:declare-step>

    <p:declare-step type="cx:eval">
      <p:input port="pipeline"/>
      <p:input port="source" sequence="true"/>
      <p:input port="options"/>
      <p:output port="result"/>
      <p:option name="step" e:type="xsd:QName"/>
      <p:option name="detailed" e:type="xsd:boolean"/>
   </p:declare-step>

    <p:declare-step type="cx:get-cookies">
      <p:output port="result"/>
      <p:option name="cookies" e:type="xsd:string"/>
   </p:declare-step>

    <p:declare-step type="cx:set-cookies">
      <p:input port="source"/>
      <p:option name="cookies" e:type="xsd:string"/>
   </p:declare-step>

    <p:declare-step type="cx:namespace-delete">
      <p:input port="source"/>
      <p:output port="result"/>
      <p:option name="prefixes" e:type="ListOfStrings"/>
   </p:declare-step>

    <p:declare-step type="cx:metadata-extractor">
      <p:output port="result"/>
      <p:option name="href" e:type="xsd:anyURI"/>
   </p:declare-step>

<p:declare-step type="cx:pegdown">
   <p:input port="source"/>
   <p:output port="result"/>
   <p:option name="max-parsing-time" e:type="xsd:integer"/>
   <p:option name="smarts" select="'false'" e:type="xsd:boolean"/>
   <p:option name="quotes" select="'false'" e:type="xsd:boolean"/>
   <p:option name="abbreviations" select="'false'" e:type="xsd:boolean"/>
   <p:option name="hardwraps" select="'false'" e:type="xsd:boolean"/>
   <p:option name="autolinks" select="'false'" e:type="xsd:boolean"/>
   <p:option name="tables" select="'false'" e:type="xsd:boolean"/>
   <p:option name="definitions" select="'false'" e:type="xsd:boolean"/>
   <p:option name="fenced-code-blocks" select="'false'" e:type="xsd:boolean"/>
   <p:option name="wikilinks" select="'false'" e:type="xsd:boolean"/>
   <p:option name="strikethrough" select="'false'" e:type="xsd:boolean"/>
   <p:option name="anchorlinks" select="'false'" e:type="xsd:boolean"/>
   <p:option name="suppress-html-blocks" select="'false'" e:type="xsd:boolean"/>
   <p:option name="suppress-inline-html" select="'false'" e:type="xsd:boolean"/>
   <p:option name="suppress-all-html" select="'false'" e:type="xsd:boolean"/>
   <p:option name="plugins" e:type="xsd:string"/>
   <p:option name="link-renderer" e:type="xsd:string"/>
   <p:option name="verbatim-serializer" e:type="xsd:string"/>
   <p:option name="to-html-serializer-plugins" e:type="xsd:string"/>
</p:declare-step>

</p:library>
